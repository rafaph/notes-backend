name: CI

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

defaults:
    run:
        shell: bash

jobs:
    lint:
        container:
            image: node:16
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: node-modules
              with:
                  path: node_modules/
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}

            - name: Install YARN dependencies
              run: |
                  if [ ! -d node_modules ]; then
                    yarn install --frozen-lockfile
                  fi
                  npx patch-package

            - name: Lint
              run: yarn lint

            - name: Cleanup
              if: ${{ always() }}
              run: |
                  shopt -s dotglob
                  rm -rf *
    test:
        container:
            image: node:16
            env:
                npm_config_build_from_source: true
                NODE_ENV: test
                JWT_SECRET: SECURE_SECRET_KEY
                DB_HOST: database
                DB_USERNAME: postgres
                DB_PASSWORD: postgres
                DB_DATABASE: notes_backend
        services:
            database:
                env:
                    POSTGRES_DB: notes_backend
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                image: postgres:14-alpine
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Cache node modules
              uses: actions/cache@v2
              env:
                  cache-name: node-modules
              with:
                  path: node_modules/
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}

            - name: Install Dependencies
              run: |
                  if [ ! -d node_modules ]; then
                    yarn install --frozen-lockfile
                  fi
                  npx patch-package

            - name: Test
              run: yarn test:ci

            - name: Cleanup
              if: ${{ always() }}
              run: |
                  shopt -s dotglob
                  rm -rf *

    deploy:
        needs: [lint, test]
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v2

            - uses: akhileshns/heroku-deploy@v3.12.12
              with:
                  heroku_api_key: ${{secrets.HEROKU_API_KEY}}
                  heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
                  heroku_email: ${{secrets.HEROKU_EMAIL}}
