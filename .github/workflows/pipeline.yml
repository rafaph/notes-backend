name: CI

on: [ push, pull_request ]

defaults:
    run:
        shell: bash

jobs:
    lint:
        container:
            image: node:lts
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Cache node modules
                uses: actions/cache@v2
                env:
                    cache-name: node-modules
                with:
                    path: node_modules/
                    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            -   name: Install NPM dependencies
                run: |
                    if [ ! -d node_modules ]; then
                      npm ci
                    fi
                    npx patch-package
            -   name: Lint
                run: npm run lint
            -   name: Cleanup
                if: ${{ always() }}
                run: |
                    shopt -s dotglob
                    rm -rf *
    test:
        container:
            image: node:lts
            env:
                npm_config_build_from_source: true
                NODE_ENV: development
                DATABASE_URL: "postgresql://postgres@database:5432/notes_backend"
                JWT_SECRET: SECURE_SECRET_KEY
        services:
            database:
                env:
                    POSTGRES_HOST_AUTH_METHOD: trust
                    POSTGRES_DB: notes_backend
                image: postgres:14-alpine
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   name: Cache node modules
                uses: actions/cache@v2
                env:
                    cache-name: node-modules
                with:
                    path: node_modules/
                    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            -   name: Install Dependencies
                run: |
                    if [ ! -d node_modules ]; then
                      npm ci
                    fi
                    npx patch-package
            -   name: Test
                run: npm run test:ci
            -   name: Cleanup
                if: ${{ always() }}
                run: |
                    shopt -s dotglob
                    rm -rf *
